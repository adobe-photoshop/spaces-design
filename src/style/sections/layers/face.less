/*
 * Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.
 *  
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation 
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the 
 * Software is furnished to do so, subject to the following conditions:
 *  
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *  
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
 * DEALINGS IN THE SOFTWARE.
 *
 */

.layer {
    min-height: 2.8rem;
    cursor: pointer;
}

.layer__dummy {
    min-height: 2.5rem;
    max-height: 2.5rem;
    cursor: default;
}

.layer__dummy_drop {
    border-top: .25rem inset @focus-highlight;
}

// Default style for LayerFace components
.face {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    height: 2.8rem;
    position: relative;
    padding-left: 1rem;
    padding-right: 1rem;
}

.face__separator {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    height: 3rem;
    padding-left: 0.4rem;
    flex-grow: 10;
    flex-shrink: 100;
    box-sizing: border-box;
}

.face__leash {
    height: 100%;
    align-tems: stretch;
    flex-shrink: 0;
    flex-grow: 0;

    &.column-half {
        width: 1.3rem;
    }
}

.generate-depth(@n, @i: 0) when (@i =< @n) {
  .face__depth-@{i} {
    padding-left: (@i * 1.8rem)+1;
  }
  .generate-depth(@n, (@i + 1));
}

.generate-depth(10);

input[type="text"].face__name, input[type="text"]:disabled.face__name {
    font-size: 1.2rem;
    color: @item-active;
    border-bottom: solid @hairline transparent;
}

.face__name {
    flex-grow: 1;
    flex-shrink: 100;
    -webkit-user-select: none;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.face__name[disabled] {
    cursor: inherit;
}

@media (resolution: 1dppx){
    .face__name {
        margin-top: -1px;
    }
}

// lock state
.face__locked {

}

// invisibility state
.face__invisible {
    
}

// Parity state
.face__parity_odd {
    
}
.face__parity_even {
    
}

// Selection state
.face:hover {
    background-color: @list-hover-color;
    z-index: 99;
    
    input[type="text"], input[type="text"]:disabled {
        color: @item-hover;
        border-bottom: solid @hairline transparent;
    }
}

// Layer visibility state
.face__not-visible, .layer-group__not-visible .layer-list {
    input[type="text"].face__name {
        color: @item-hover;
        opacity: @label-hidden-opacity;
    }
}

// Layer descendents selection state
.layer-group__selected {
    .face, .face:hover {
        background-color: @list-select-child-color;
        
        input[type="text"], input[type="text"]:disabled {
            border-bottom: solid @hairline transparent;
        }
    }
}

// Layer direct selection state
.face__selected, .layer-group__selected .face__selected {
    &, &:hover {
        background-color: @list-select-color;
    }

    input[type="text"].face__name,
    &:hover input[type="text"].face__name,
    .face__name, &:hover .face__name {
        color: @item;
    }
    
    input[type="text"].face__name {
        border-bottom: solid @hairline transparent;
    }
    
    input[type="text"].face__name:focus,
    input[type="text"].face__name:focus {
        border-bottom: solid @hairline @focus-highlight;
        color: @item;
        -webkit-user-select: text;
    }
}

// Layer Group collapsed state
.layer-group__collapsed {
    > .layer-list {
        display: none;
    }
}

.face__select_descendant .face__name, .face__select_descendant:hover .face__name {
    color: @item-active;
}

.face__drop_target, .face__drop_target:hover {
    background-color: none;
    cursor: -webkit-grabbing;
}

// Drop state
.face__drop_target_above:before {
    content: "";
    position: absolute;
    height: 2*@hairline*1rem;
    left: 0;
    top: 0.25/2 * 1rem;
    width: 100%;
    background: @focus-highlight;
}

.face__drop_target_below:before {
    content: "";
    position: absolute;
    height: 2*@hairline*1rem;
    left: 0;
    top: 100%;
    width: 100%;
    background: @focus-highlight;
    margin-top: @hairline;
}

.face__drop_target_on {
    box-shadow: inset 0px 0px 0px .25rem @focus-highlight;
}

// Drag state
.face__drag-target {
    background-color: none;
    opacity: 0.5;
    position: fixed;
    margin-left: 0;
    width: @panel-column-width;
    z-index: 1;
    pointer-events: none;
}

.layer-group__drag-target {
    padding-top: 2.8rem;
}

// Layer name focus/blur state
.face__input_focus {

}
.face__input_none {
    
}

// For unselected layers, whether the previous/next layer in the z-order is selected
.face__transition_to_select {

}
.face__transition_from_select {

}

// Search match state
.face__search_matched {
    
}
.face__search_none {
    
}
